name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full validation
        run: npm run validate

      - name: Build project
        run: npm run package

      - name: Verify build outputs
        run: |
          if [ ! -f dist/index.js ]; then
            echo "Expected dist/index.js was not generated"
            exit 1
          fi
          
          # Check that dist/index.js is included in git
          if git status --porcelain | grep -q "dist/index.js"; then
            echo "dist/index.js has uncommitted changes"
            exit 1
          fi

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Changes in v${{ steps.version.outputs.VERSION }}
            
            See the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
            
            ## Usage
            
            ```yaml
            - uses: shopware/ai-contribution-validation-action@v${{ steps.version.outputs.VERSION }}
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                gemini-api-key: ${{ secrets.GEMINI_API_KEY }}
            ```

      - name: Update major version tag
        run: |
          MAJOR_VERSION=$(echo ${{ steps.version.outputs.VERSION }} | cut -d. -f1)
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -fa v${MAJOR_VERSION} -m "Update v${MAJOR_VERSION} tag to ${{ github.ref }}"
          git push origin v${MAJOR_VERSION} --force